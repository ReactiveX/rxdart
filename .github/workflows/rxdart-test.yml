name: Dart CI

on:
  push:
    branches: [ master ]
    paths-ignore: [ '**.md', 'examples/**' ]
  pull_request:
    branches: [ master ]
    paths-ignore: [ '**.md', 'examples/**' ]
  schedule:
    # Runs at 00:00 UTC on the 1, 8, 15, 22 and 29th of every month.
    - cron: '0 0 */7 * *'
  workflow_dispatch:

jobs:
  analyze-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        #        sdk: [ beta, stable, 2.17.0, 2.15.0, 2.12.0 ]
        flutter: [ beta, stable, 3.0.0, 2.8.0, 2.0.1 ]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Stable/Beta Flutter/Dart
        if: ${{ matrix.flutter == 'stable' || matrix.flutter == 'beta' }}
        uses: subosito/flutter-action@v2.18.0
        with:
          channel: ${{ matrix.flutter }}

      - name: Setup Older Flutter/Dart
        if: ${{ matrix.flutter != 'stable' && matrix.flutter != 'beta' }}
        uses: subosito/flutter-action@v2.18.0
        with:
          flutter-version: ${{ matrix.flutter }}

      - name: Install melos
        run: dart pub global activate melos

      - name: Print Dart SDK version
        run: dart --version

      - name: Print Flutter SDK version
        run: flutter --version

      - name: Install dependencies
        run: melos run pub-get-no-private

      - name: Analyze
        if: ${{ matrix.flutter == 'stable' }}
        run: melos run analyze-no-private

      - name: Format code
        if: ${{ matrix.flutter == 'stable' }}
        run: melos run format-no-private

      - name: Active coverage
        run: dart pub global activate coverage

      - name: Run tests
        run: melos run test-rxdart

      - uses: codecov/codecov-action@v3.1.6
        if: ${{ matrix.flutter == 'stable' }}
